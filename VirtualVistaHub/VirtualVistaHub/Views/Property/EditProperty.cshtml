@model VirtualVistaHub.Models.EditPropertyViewModel

@{
    ViewBag.Title = "EditProperty";
}

<h2>EditProperty</h2>

@using (Html.BeginForm("EditProperty", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Property</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Property.PropertyId)
        @Html.HiddenFor(model => model.TableName)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.Denied)

        <div class="form-group">
            @Html.LabelFor(model => model.Property.TypeOfProperty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.TypeOfProperty, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.TypeOfProperty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.District, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.District, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.District, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.TypeOfConstruction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.TypeOfConstruction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.TypeOfConstruction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.AdditionalInformation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.AdditionalInformation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.AdditionalInformation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.ApprovalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property.ApprovalStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Property.ApprovalStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.TypeOfSale, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Property.TypeOfSale, new List<SelectListItem>
                {
                    new SelectListItem { Value = "Наем", Text = "Наем" },
                    new SelectListItem { Value = "Продажба", Text = "Продажба", Selected = true }
                }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Property.TypeOfSale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Property.Sold, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Property.Sold)
                    @Html.ValidationMessageFor(model => model.Property.Sold, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PropertyDetails.VTour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PropertyDetails.VTour, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyDetails.VTour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Images</label>
            <div class="col-md-10">
                @if (Model.ImagePaths != null && Model.ImagePaths.Length > 0)
                {
                    foreach (var imagePath in Model.ImagePaths)
                    {
                        <div class="image-item">
                            <img src="@Url.Content($"~/Uploads/{Model.TableName}/{imagePath}")" alt="Property Image" class="img-thumbnail" style="max-width: 100px;" />
                            <button type="button" class="btn btn-danger btn-delete-image" data-image="@imagePath" data-property-id="@Model.Property.PropertyId" data-table-name="@Model.TableName">Delete</button>
                            <input type="file" name="newImages" class="form-control" />
                            <input type="hidden" name="OldImages" value="@imagePath" />
                        </div>
                    }
                }
                else
                {
                    <p>No images found for this property.</p>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@using (Html.BeginForm("AddNewImage", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("PropertyId", Model.Property.PropertyId)
    @Html.Hidden("TableName", Model.TableName)

    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Add New Images</label>
            <div class="col-md-10">
                <input type="file" name="newImages" class="form-control" multiple />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('.btn-delete-image').click(function () {
                var imageName = $(this).data('image');
                var propertyId = $(this).data('property-id');
                var tableName = $(this).data('table-name');
                if (confirm('Are you sure you want to delete this image?')) {
                    $.post('@Url.Action("DeleteImage", "Property")', { imageName: imageName, propertyId: propertyId, tableName: tableName }, function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error deleting image.');
                        }
                    });
                }
            });
        });
    </script>
}